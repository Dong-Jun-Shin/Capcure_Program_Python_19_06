# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:/Users/tlseh/Desktop/mecro/_uiFiles/lectureCapture.ui'
#
# Created by: PyQt5 UI code generator 5.12.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(300, 453)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textBrowser_output = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_output.setGeometry(QtCore.QRect(10, 190, 281, 192))
        self.textBrowser_output.setOpenExternalLinks(True)
        self.textBrowser_output.setObjectName("textBrowser_output")
        self.capture_Button = QtWidgets.QPushButton(self.centralwidget)
        self.capture_Button.setGeometry(QtCore.QRect(30, 140, 101, 41))
        self.capture_Button.setAutoFillBackground(False)
        self.capture_Button.setObjectName("capture_Button")
        self.l_dir = QtWidgets.QLabel(self.centralwidget)
        self.l_dir.setGeometry(QtCore.QRect(10, 40, 91, 21))
        self.l_dir.setAlignment(QtCore.Qt.AlignCenter)
        self.l_dir.setObjectName("l_dir")
        self.lineEdit_lctr = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_lctr.setGeometry(QtCore.QRect(140, 10, 71, 20))
        self.lineEdit_lctr.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.lineEdit_lctr.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.lineEdit_lctr.setObjectName("lineEdit_lctr")
        self.l_lctr = QtWidgets.QLabel(self.centralwidget)
        self.l_lctr.setGeometry(QtCore.QRect(10, 10, 91, 20))
        self.l_lctr.setAlignment(QtCore.Qt.AlignCenter)
        self.l_lctr.setObjectName("l_lctr")
        self.cancle_Button = QtWidgets.QPushButton(self.centralwidget)
        self.cancle_Button.setGeometry(QtCore.QRect(170, 140, 101, 41))
        self.cancle_Button.setObjectName("cancle_Button")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 120, 281, 20))
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setObjectName("line")
        self.l_dir_show = QtWidgets.QLabel(self.centralwidget)
        self.l_dir_show.setGeometry(QtCore.QRect(110, 40, 121, 21))
        self.l_dir_show.setFrameShape(QtWidgets.QFrame.Box)
        self.l_dir_show.setText("")
        self.l_dir_show.setAlignment(QtCore.Qt.AlignCenter)
        self.l_dir_show.setObjectName("l_dir_show")
        self.clear_Button = QtWidgets.QPushButton(self.centralwidget)
        self.clear_Button.setGeometry(QtCore.QRect(200, 390, 81, 23))
        self.clear_Button.setObjectName("clear_Button")
        self.path_Button = QtWidgets.QPushButton(self.centralwidget)
        self.path_Button.setGeometry(QtCore.QRect(240, 40, 41, 21))
        self.path_Button.setObjectName("path_Button")
        self.l_ePoint_show = QtWidgets.QLabel(self.centralwidget)
        self.l_ePoint_show.setGeometry(QtCore.QRect(100, 100, 131, 20))
        self.l_ePoint_show.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.l_ePoint_show.setText("")
        self.l_ePoint_show.setAlignment(QtCore.Qt.AlignCenter)
        self.l_ePoint_show.setObjectName("l_ePoint_show")
        self.l_sPoint = QtWidgets.QLabel(self.centralwidget)
        self.l_sPoint.setGeometry(QtCore.QRect(10, 70, 91, 20))
        self.l_sPoint.setAlignment(QtCore.Qt.AlignCenter)
        self.l_sPoint.setObjectName("l_sPoint")
        self.l_sPoint_show = QtWidgets.QLabel(self.centralwidget)
        self.l_sPoint_show.setGeometry(QtCore.QRect(100, 70, 131, 20))
        self.l_sPoint_show.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.l_sPoint_show.setText("")
        self.l_sPoint_show.setAlignment(QtCore.Qt.AlignCenter)
        self.l_sPoint_show.setObjectName("l_sPoint_show")
        self.l_ePoint = QtWidgets.QLabel(self.centralwidget)
        self.l_ePoint.setGeometry(QtCore.QRect(10, 100, 91, 20))
        self.l_ePoint.setAlignment(QtCore.Qt.AlignCenter)
        self.l_ePoint.setObjectName("l_ePoint")
        self.position_Button = QtWidgets.QPushButton(self.centralwidget)
        self.position_Button.setGeometry(QtCore.QRect(240, 70, 41, 51))
        self.position_Button.setObjectName("position_Button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 300, 21))
        self.menubar.setObjectName("menubar")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionCtrl_Q = QtWidgets.QAction(MainWindow)
        self.actionCtrl_Q.setObjectName("actionCtrl_Q")
        self.actionExit_2 = QtWidgets.QAction(MainWindow)
        self.actionExit_2.setObjectName("actionExit_2")
        self.actionView = QtWidgets.QAction(MainWindow)
        self.actionView.setEnabled(True)
        self.actionView.setMenuRole(QtWidgets.QAction.TextHeuristicRole)
        self.actionView.setObjectName("actionView")
        self.actionExit_1 = QtWidgets.QAction(MainWindow)
        self.actionExit_1.setCheckable(False)
        self.actionExit_1.setEnabled(True)
        self.actionExit_1.setObjectName("actionExit_1")
        self.menuTools.addAction(self.actionView)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionExit_1)
        self.menubar.addAction(self.menuTools.menuAction())

        self.retranslateUi(MainWindow)
        self.actionExit_1.triggered.connect(MainWindow.close)
        self.actionView.triggered.connect(MainWindow.slot_view)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "lecture Capture [Ver.1]"))
        self.textBrowser_output.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Gulim\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.capture_Button.setText(_translate("MainWindow", "캡쳐 시작"))
        self.l_dir.setText(_translate("MainWindow", "사진 저장 경로"))
        self.lineEdit_lctr.setText(_translate("MainWindow", "0"))
        self.l_lctr.setText(_translate("MainWindow", "몇 교시 입니까?"))
        self.cancle_Button.setText(_translate("MainWindow", "취소"))
        self.clear_Button.setText(_translate("MainWindow", "내역 지우기"))
        self.path_Button.setText(_translate("MainWindow", "수정"))
        self.l_sPoint.setText(_translate("MainWindow", "시작 위치 지정"))
        self.l_ePoint.setText(_translate("MainWindow", "끝 위치 지정"))
        self.position_Button.setText(_translate("MainWindow", "수정"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionCtrl_Q.setText(_translate("MainWindow", "Ctrl+Q"))
        self.actionExit_2.setText(_translate("MainWindow", "Exit"))
        self.actionView.setText(_translate("MainWindow", "View"))
        self.actionView.setStatusTip(_translate("MainWindow", "저장된 폴더를 엽니다."))
        self.actionView.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExit_1.setText(_translate("MainWindow", "Exit"))
        self.actionExit_1.setStatusTip(_translate("MainWindow", "프로그램을 종료합니다."))
        self.actionExit_1.setShortcut(_translate("MainWindow", "Ctrl+Q"))




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
